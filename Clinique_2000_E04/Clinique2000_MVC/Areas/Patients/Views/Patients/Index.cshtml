@*@using System.Security.Claims

@{
    ViewData["Title"] = "Home Page";
    var isAuthenticated = Context.User.Identity.IsAuthenticated;
    var userEmail = isAuthenticated ? Context.User.FindFirst(ClaimTypes.Email)?.Value : null;
}

<div class="text-center">
    <h1 class="display-4 h0">Welcome</h1>
    <p class="p1">Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

@if (isAuthenticated)
{
    <br />
    <h3>Welcome @User.Identity.Name</h3>
    @if (!string.IsNullOrEmpty(userEmail))
    {
        <p>Email: @userEmail</p>
    }
    <br />
    <a asp-controller="Home" asp-action="Logout" class="btn btn-primary form-control">Logout</a>
}
else
{
    <a asp-controller="Home" asp-action="Index" class="btn btn-primary form-control">Log in</a>
}*@

@*@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Home Page";
    var isAuthenticated = SignInManager.IsSignedIn(User);
    var userEmail = isAuthenticated ? User.Identity?.Name! : null;
}
<div class="text-center">
    <h1 class="display-4 h0">Welcome</h1>
    <p class="p1">Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>
@if (isAuthenticated)
{
    <br />
    <h3>Welcome </h3>
    @if (!string.IsNullOrEmpty(userEmail))
    {
        <p>Email: @userEmail</p>
    }
    <br />
        <form id="logoutForm" class="form-horizontal" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="btn btn-outline-success btn-floating" style="border:none">
                <i class="fa-solid fa-right-from-bracket fa-flip-horizontal"></i>
                OUT
            </button>
        </form>
}
else
{
        <form id="external-account" asp-area="Identity" asp-page="/Account/ExternalLogin" asp-route-returnUrl="@Url.Content("~/")" method="post" class="form-horizontal">
            <div>
                <button type="submit" class="btn btn-outline-dark btn-floating" style="border:none" name="provider" value="Google" title="Log in using your Google account">
                    IN
                    <i class="fa-solid fa-right-to-bracket"></i>
                </button>
            </div>

        </form>
}*@


@model IEnumerable<Patient>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Nom)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Prenom)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NAM)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CodePostal)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateDeNaissance)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Age)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserId)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nom)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Prenom)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NAM)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CodePostal)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateDeNaissance)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserId)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.PatientId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.PatientId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.PatientId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
